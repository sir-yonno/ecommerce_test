{"ast":null,"code":"var _jsxFileName = \"/home/yonno/Documents/Projects/TW/Prova/mern-test/frontend/src/screens/OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true,\n        error: ''\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false,\n        order: action.payload,\n        error: ''\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: true,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function OrderScreen() {\n  _s();\n\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const navigate = useNavigate();\n  const [{\n    loading,\n    error,\n    order\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    order: {},\n    error: ''\n  });\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const response = await fetch(`api/orders/${orderId}`, {\n          method: 'GET',\n          headers: new Headers({\n            authorization: `Bearer ${userInfo.token}`\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) throw new Error(data.message);\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: getError(err)\n        });\n      }\n    };\n\n    if (!userInfo) return navigate('/login');\n\n    if (!order._id || order._id && order._id !== orderId) {\n      fetchOrder();\n    }\n  }, [order, userInfo, orderId, navigate]);\n  const {\n    id: orderId\n  } = params;\n  return loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Order \", orderId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"my-3\",\n      children: [\"Order \", orderId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderScreen, \"46JLD8lermZu88kF62XYtCRZ0TE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","Helmet","useNavigate","LoadingBox","MessageBox","Store","getError","reducer","state","action","type","loading","error","order","payload","OrderScreen","userInfo","navigate","dispatch","fetchOrder","response","fetch","orderId","method","headers","Headers","authorization","token","data","json","ok","Error","message","err","_id","id","params"],"sources":["/home/yonno/Documents/Projects/TW/Prova/mern-test/frontend/src/screens/OrderScreen.js"],"sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useNavigate } from \"react-router-dom\";\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { getError } from '../utils';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state, loading: true, error: '' };\n    case 'FETCH_SUCCESS':\n      return { ...state, loading: false, order: action.payload, error: '' };\n    case 'FETCH_FAIL':\n      return { ...state, loading: true, error: action.payload };\n    default:\n      return state;\n  }\n}\nexport default function OrderScreen() {\n\n  const { state } = useContext(Store);\n  const { userInfo } = state;\n  const navigate = useNavigate();\n\n  const [{ loading, error, order }, dispatch] = useReducer(reducer, {\n    loading: true,\n    order: {},\n    error: '',\n  })\n\n  useEffect(() => {\n    const fetchOrder = async () => {\n      try {\n        dispatch({ type: 'FETCH_REQUEST' });\n        const response = await fetch(`api/orders/${orderId}`, {\n          method: 'GET',\n          headers: new Headers({ authorization: `Bearer ${userInfo.token}` })\n        });\n        const data = await response.json();\n        if (!response.ok)\n          throw new Error(data.message);\n        \n      } catch (err) {\n        dispatch({ type: 'FETCH_FAIL', payload: getError(err) });\n      }\n    }\n    if (!userInfo)\n      return navigate('/login');\n\n    if (!order._id || (order._id && order._id !== orderId)) {\n      fetchOrder();\n    }\n  }, [order,userInfo,orderId,navigate]);\n\n  const { id: orderId } = params;\n\n\n  return loading ? (\n    <LoadingBox></LoadingBox>\n  ) : error ? (\n    <MessageBox variant='danger'>{error}</MessageBox>\n  ) : (\n    <div>\n          <Helmet>\n            <title>Order {orderId}</title>\n          </Helmet>\n            <h1 className=\"my-3\">Order {orderId}</h1>\n        </div>\n  )\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}